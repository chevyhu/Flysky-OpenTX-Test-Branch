diff --git a/radio/src/gui/480x272/radio_spectrum_analyser.cpp b/radio/src/gui/480x272/radio_spectrum_analyser.cpp
index dcea31477..83fed0a4c 100644
--- a/radio/src/gui/480x272/radio_spectrum_analyser.cpp
+++ b/radio/src/gui/480x272/radio_spectrum_analyser.cpp
@@ -118,10 +118,9 @@ RadioSpectrumAnalyserPage::RadioSpectrumAnalyserPage():
 
   }
 
-bool RadioSpectrumAnalyserPage::leave(std::function<void()> handler) {
-  leaveHandler = std::move(handler);
+void RadioSpectrumAnalyserPage::leave() {
   if (moduleIndex < 0 || moduleState[moduleIndex].mode != MODULE_MODE_SPECTRUM_ANALYSER) {
-    return false;
+    return;
   }
   started = false;
    if (isModulePXX2(moduleIndex)) {
@@ -134,17 +133,6 @@ bool RadioSpectrumAnalyserPage::leave(std::function<void()> handler) {
     }
   }
   setModuleFlag(moduleIndex, MODULE_MODE_NORMAL);
-  tmr10ms_t start = get_tmr10ms();
-  auto mb = new MessageBox(WARNING_TYPE_INFO, (DialogResult)0, STR_STOPPING, "Releasing resources, please wait...",  [=](DialogResult result) { 
-      if(leaveHandler) leaveHandler();
-    });
-    mb->setCloseCondition([=]() -> DialogResult {
-      if (get_tmr10ms() >= start + 500) {
-        return DialogResult::OK;
-      }
-      return (DialogResult) 0;
-    });
-    return true;
 } 
 
 bool RadioSpectrumAnalyserPage::prepare(Window * window) {
diff --git a/radio/src/gui/480x272/radio_spectrum_analyser.h b/radio/src/gui/480x272/radio_spectrum_analyser.h
index 0f8cf4567..295e4e6ab 100644
--- a/radio/src/gui/480x272/radio_spectrum_analyser.h
+++ b/radio/src/gui/480x272/radio_spectrum_analyser.h
@@ -27,7 +27,7 @@ class RadioSpectrumAnalyserPage: public PageTab {
       leaveHandler = nullptr;
     }
     void build(Window * window) override;
-    bool leave(std::function<void()> handler) override; 
+    void leave() override; 
     
   protected:
     bool prepare(Window * window);
diff --git a/radio/src/gui/common/windows/tabsgroup.cpp b/radio/src/gui/common/windows/tabsgroup.cpp
index bc75d635b..89563bdd7 100644
--- a/radio/src/gui/common/windows/tabsgroup.cpp
+++ b/radio/src/gui/common/windows/tabsgroup.cpp
@@ -28,28 +28,14 @@
 TabsGroupHeader::TabsGroupHeader(TabsGroup * parent):
   Window(parent, { 0, 0, LCD_W, MENU_BODY_TOP }, OPAQUE),
   back(this, { 0, 0, TOPBAR_BUTTON_WIDTH, TOPBAR_BUTTON_WIDTH }, ICON_BACK,
-       [&]() -> uint8_t {
-        bool switching = false;
-        if (menu) {
-          switching = menu->switching;
-          if (!switching && menu->currentTab) {
-            menu->switching = switching = menu->currentTab->leave(std::bind(&TabsGroupHeader::deleteMenu, this));
-          }
-          if (!switching) {
-            deleteMenu();
-          }
-        }
-        return !switching;
+       [=]() -> uint8_t {
+         if (parent->currentTab) parent->currentTab->leave();
+         parent->deleteLater();
+         return 1;
        }, BUTTON_NOFOCUS),
   carousel(this, parent)
 {
-  menu = parent;
-}
 
-void TabsGroupHeader::deleteMenu() {
-  menu->switching = false;
-  menu->deleteLater();
-  menu = nullptr;
 }
 
 void TabsGroupHeader::paint(BitmapBuffer * dc)
@@ -137,31 +123,18 @@ void TabsGroup::removeTab(unsigned index)
 
 void TabsGroup::setCurrentTab(PageTab * tab)
 {
-  if (tab != currentTab && !switching) {
+  if (tab != currentTab) {
     clearFocus();
     body.clear();
     TextKeyboard::instance()->disable(false);
     NumberKeyboard::instance()->disable(false);
     CurveKeyboard::instance()->disable(false);
-    if (currentTab) {
-      switching = currentTab->leave([=]() {
-        currentTab = tab;
-        switchTab();
-      });
-    }
-    if (!switching) {
-      currentTab = tab;
-      switchTab();
-    }
-  }
-}
-void TabsGroup::switchTab() {
-  if (currentTab) {
-    currentTab->build(&body);
-    header.setTitle(currentTab->title.c_str());
+    if (currentTab) currentTab->leave();
+    currentTab = tab;
+    tab->build(&body);
+    header.setTitle(tab->title.c_str());
     invalidate();
   }
-  switching = false;
 }
 
 void TabsGroup::checkEvents()
diff --git a/radio/src/gui/common/windows/tabsgroup.h b/radio/src/gui/common/windows/tabsgroup.h
index 168671740..ca4520230 100644
--- a/radio/src/gui/common/windows/tabsgroup.h
+++ b/radio/src/gui/common/windows/tabsgroup.h
@@ -42,13 +42,11 @@ class PageTab {
     {
     }
 
-    virtual void build(Window * window) = 0;
+    virtual void build(Window * window) = 0;    
     //leave page called when page is switched or leaved 
     //if false is retuned it can be removed/leaved immedtly
     //otherweise leave function will call action specified after it is possibile
-    virtual bool leave(std::function<void()> handler) {
-      return false;
-    }
+    virtual void leave() {}
 
     virtual void checkEvents()
     {
@@ -117,8 +115,6 @@ class TabsGroupHeader: public Window {
     }
 
   protected:
-    void deleteMenu();
-    TabsGroup * menu;
     IconButton back;
     TabsCarousel carousel;
     const char * title = nullptr;
@@ -129,6 +125,7 @@ class TabsGroup: public Window {
     friend class TabsGroupHeader;
   public:
     TabsGroup();
+
     ~TabsGroup();
 
 #if defined(DEBUG_WINDOWS)
@@ -158,9 +155,6 @@ class TabsGroup: public Window {
     bool onTouchEnd(coord_t x, coord_t y) override;
 
   protected:
-    void switchTab();
-    //a flag used to check if page switch was not blocked
-    bool switching;
     TabsGroupHeader header;
     Window body;
     std::vector<PageTab *> tabs;
